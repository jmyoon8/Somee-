{"version":3,"sources":["itemList/itemListComponents/CategoryList.tsx","utils/Colors.ts","utils/AxiosInstance.ts","Redux/actionTypes.ts","itemList/itemListComponents/ItemContent.tsx","itemList/itemListComponents/Paging.tsx","itemList/itemListComponents/CategoryItemList.tsx","Redux/actions.ts","itemList/itemListComponents/BucketList.tsx","itemList/itemListScreens/ItemList.tsx","Main/CustomLinkComponent.tsx","Main/SideBar.tsx","Main/images/headerArrow.svg","Main/Header.tsx","itemList/itemListComponents/ItemDetail.tsx","App.tsx","reportWebVitals.ts","Redux/defaultReducer.ts","Redux/combineReducers.ts","index.tsx"],"names":["CategoryList","item","id","name","selectedCategory","setSelectedCategory","onClick","css","ApiInstance","axios","create","baseURL","timeout","GET_CATEGORY_ITEMS","GET_CATEGORY_ITEMS_FULFILLED","GET_CATEGORYS_FULFILLED","GET_DETAIL_ITEM","ItemContent","props","brand","mainImage","currentOrderLimit","endDate","hightlight","originalPrice","prefix","productUrl","shop","soldOut","ssomeePrice","isBucket","startDate","index","setItemList","navigater","useNavigate","deleteBucket","whatFunction","console","log","getBucket","JSON","parse","localStorage","getItem","undefined","splice","setItem","stringify","alert","window","open","alt","src","toLocaleString","push","state","Paging","pageHandler","pageBloks","currentPage","map","key","CategoryItemList","categoryId","useState","setCurrentPage","category","maxPage","productCount","products","itemList","totalCount","pageCount","start","number","startPage","endPage","pageBlock","pageSize","paging","setPaging","setPageBlocks","searchValue","setSearchValue","dispatch","useDispatch","useEffect","getData","page","categoryID","type","payload","a","get","data","then","value","Math","floor","prev","pageBlockArray","i","length","onChange","e","currentTarget","includes","where","pageNum","BucketList","TotalBucket","slice","uuid","ItemList","whatList","apiList","setApiList","isMatchChild","useMatch","CustomLinkComponent","children","to","resolve","useResolvedPath","isMatch","path","pathname","end","SideBar","_path","_excluded","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHeaderArrow","_ref","svgRef","title","titleId","xmlns","viewBox","preserveAspectRatio","ref","d","fill","className","ForwardRef","Header","ItemDetail","getLocation","useLocation","detail","setDetail","description","replaceAll","ReactHtmlParser","App","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","result","defaultReducer","action","payLoad","reducers","combineReducers","store","createStore","applyMiddleware","PromiseMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6667a78.chunk.js","sourcesContent":["import { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { CD3E9F3, CFFF } from \"../../utils/Colors\";\nimport { CategoryListProps } from \"../types/types\";\n\nfunction CategoryList({\n   item: { id, name },\n   selectedCategory,\n   setSelectedCategory,\n}: CategoryListProps) {\n   return (\n      <div\n         onClick={() => setSelectedCategory(id)}\n         css={css`\n            @media (max-width: 500px) {\n               padding-left: 4px;\n               padding-right: 4px;\n            }\n            padding-left: 8px;\n            padding-right: 8px;\n            padding-top: 5px;\n            padding-bottom: 5px;\n            flex-grow: 1;\n            min-height: 40px;\n            background-color: ${selectedCategory === id ? CD3E9F3 : CFFF};\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            user-select: none;\n            cursor: pointer;\n         `}\n      >\n         {name}\n      </div>\n   );\n}\n\nexport default CategoryList;\n","export const C2C73D2 = \"#2C73D2\";\nexport const CFBEAFF = \"#fbeaff\";\nexport const C2184A0 = \"#2184A0\";\nexport const CFFF = \"#fff\";\nexport const CD3E9F3 = \"#D3E9F3\";\n","import axios from \"axios\";\n\nexport const ApiInstance = axios.create({\n   baseURL: \"https://mock-api.ssomee.com/\",\n   timeout: 2500,\n});\n","export const GET_CATEGORY_ITEMS = \"GET_CATEGORY_ITEMS\";\nexport const GET_CATEGORY_ITEMS_FULFILLED = \"GET_CATEGORY_ITEMS_FULFILLED\";\nexport const GET_CATEGORYS = \"GET_CATEGORYS\";\nexport const GET_CATEGORYS_FULFILLED = \"GET_CATEGORYS_FULFILLED\";\nexport const GET_DETAIL_ITEM = \"GET_DETAIL_ITEM\";\n","import { css } from \"@emotion/react\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { NavigateFunction, useNavigate } from \"react-router\";\nimport { ProductType } from \"../types/types\";\n\nfunction ItemContent(\n   props: ProductType & {\n      isBucket?: boolean;\n      index?: number;\n      setItemList?: React.Dispatch<React.SetStateAction<ProductType[]>>;\n   }\n) {\n   const {\n      brand,\n      currentOrderLimit,\n      endDate,\n      hightlight,\n      mainImage,\n      name,\n      originalPrice,\n      prefix,\n      productUrl,\n      shop,\n      soldOut,\n      ssomeePrice,\n      startDate,\n      isBucket,\n      index,\n      setItemList,\n   }: ProductType & {\n      isBucket?: boolean;\n      index?: number;\n      setItemList?: React.Dispatch<React.SetStateAction<ProductType[]>>;\n   } = props;\n   const navigater: NavigateFunction = useNavigate();\n   const addBucket = () => {\n      let getBucket: ProductType[] = JSON.parse(localStorage.getItem(\"bucket\") as string);\n      if (getBucket) {\n         getBucket.push(props);\n         localStorage.setItem(\"bucket\", JSON.stringify(getBucket));\n      } else {\n         localStorage.setItem(\"bucket\", JSON.stringify([props]));\n      }\n   };\n   const deleteBucket = (whatFunction: \"delete\" | \"buy\") => {\n      console.log(index);\n      let getBucket: ProductType[] = JSON.parse(localStorage.getItem(\"bucket\") as string);\n      if (index !== undefined) getBucket.splice(index, 1);\n      if (setItemList) {\n         setItemList(getBucket);\n         localStorage.setItem(\"bucket\", JSON.stringify(getBucket));\n      }\n      alert(\n         whatFunction === \"buy\"\n            ? \"해당 제품을 구입하였습니다.\"\n            : \"해당 제품을 장바구니에서 제거했습니다.\"\n      );\n   };\n\n   const goToDetailPage = () => {\n      navigater(\"detail\", { state: { prefix } });\n   };\n\n   return (\n      <>\n         <div\n            css={css`\n               border: 1px solid black;\n               margin-left: 10px;\n               margin-right: 10px;\n               margin-bottom: 10px;\n               width: 18%;\n               display: flex;\n               min-height: 45%;\n               max-height: 50%;\n               flex-direction: column;\n               justify-content: space-between;\n               @media (max-width: 500px) {\n                  height: 30%;\n               }\n            `}\n         >\n            {brand.name}\n\n            <img\n               onClick={() => window.open(productUrl)}\n               alt=\"상품이미지\"\n               css={css`\n                  width: 100%;\n                  height: 40%;\n                  cursor: pointer;\n               `}\n               src={mainImage}\n            />\n            <div\n               css={css`\n                  display: -webkit-box;\n                  display: -ms-flexbox;\n                  display: box;\n                  margin-top: 1px;\n                  max-height: 80px;\n                  overflow: hidden;\n                  vertical-align: top;\n                  text-overflow: ellipsis;\n                  word-break: break-all;\n                  -webkit-box-orient: vertical;\n                  -webkit-line-clamp: 2;\n                  text-align: center;\n                  font-size: 0.9rem;\n               `}\n            >\n               {name}\n            </div>\n            <div\n               css={css`\n                  font-size: 0.9rem;\n                  text-decoration: line-through;\n                  text-decoration-color: red;\n               `}\n            >\n               원가: {originalPrice.toLocaleString()}원\n            </div>\n            <div\n               css={css`\n                  font-size: 0.9rem;\n               `}\n            >\n               쏘미에서 살경우 : {ssomeePrice.toLocaleString()}원\n            </div>\n            <div\n               css={css`\n                  font-size: 0.9rem;\n               `}\n            >\n               재고 {!soldOut ? \"있음\" : \"없음\"}\n            </div>\n\n            <div\n               css={css`\n                  font-size: 0.9rem;\n               `}\n            >\n               {shop.name}\n            </div>\n            {isBucket ? (\n               <>\n                  <button\n                     onClick={() => deleteBucket(\"delete\")}\n                     css={css`\n                        font-size: 0.9rem;\n                     `}\n                  >\n                     장바구니 제거\n                  </button>\n                  <button\n                     onClick={() => deleteBucket(\"buy\")}\n                     css={css`\n                        font-size: 0.9rem;\n                     `}\n                  >\n                     구입하기\n                  </button>\n               </>\n            ) : (\n               <>\n                  <button\n                     onClick={addBucket}\n                     css={css`\n                        font-size: 0.9rem;\n                     `}\n                  >\n                     장바구니 추가\n                  </button>\n                  <button\n                     onClick={goToDetailPage}\n                     css={css`\n                        font-size: 0.9rem;\n                     `}\n                  >\n                     상새페이지\n                  </button>\n               </>\n            )}\n         </div>\n      </>\n   );\n}\n\nexport default ItemContent;\n","import { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { PagingProps } from \"../types/types\";\n\nfunction Paging({ pageHandler, pageBloks, currentPage }: PagingProps) {\n   return (\n      <div\n         css={css`\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n         `}\n      >\n         <button onClick={() => pageHandler(\"first\")}>처음으로</button>\n         <div\n            css={css`\n               font-size: 1.5rem;\n               cursor: pointer;\n               margin-left: 10px;\n               margin-right: 10px;\n            `}\n            onClick={() => pageHandler(\"minus\")}\n         >\n            {\"<\"}\n         </div>\n         {pageBloks.map((item, index) => {\n            if (item === currentPage) {\n               return (\n                  <div\n                     onClick={() => pageHandler(\"switchPage\", item)}\n                     css={css`\n                        font-size: 2rem;\n                        cursor: pointer;\n                        margin-left: 10px;\n                        margin-right: 10px;\n                     `}\n                     key={item}\n                  >\n                     {item}\n                  </div>\n               );\n            }\n            return (\n               <div\n                  onClick={() => pageHandler(\"switchPage\", item)}\n                  css={css`\n                     font-size: 1.3rem;\n                     cursor: pointer;\n                     margin-left: 10px;\n                     margin-right: 10px;\n                  `}\n                  key={item}\n               >\n                  {item}\n               </div>\n            );\n         })}\n         <div\n            css={css`\n               font-size: 1.5rem;\n               cursor: pointer;\n               margin-left: 10px;\n               margin-right: 10px;\n            `}\n            onClick={() => pageHandler(\"plus\")}\n         >\n            {\">\"}\n         </div>\n         <button onClick={() => pageHandler(\"last\")}>마지막으로</button>\n      </div>\n   );\n}\n\nexport default Paging;\n","import { css } from \"@emotion/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getCategoryItems } from \"../../Redux/actions\";\nimport { CategoryItemListProps, CategoryItemsType } from \"../types/types\";\nimport ItemContent from \"./ItemContent\";\nimport Paging from \"./Paging\";\n\nfunction CategoryItemList({ categoryId }: CategoryItemListProps) {\n   const [currentPage, setCurrentPage] = useState(1);\n   const [itemList, setItemList] = useState<CategoryItemsType>({\n      category: { id: 0, name: \"\" },\n      maxPage: 0,\n      productCount: 0,\n      products: [],\n   });\n   const [paging, setPaging] = useState({\n      totalCount: 0,\n      pageCount: 0,\n      start: 0,\n      number: 0,\n      startPage: 0,\n      endPage: 0,\n      pageBlock: 3,\n      pageSize: 10,\n   });\n   const [pageBloks, setPageBlocks] = useState<any[]>([]);\n   const [searchValue, setSearchValue] = useState(\"\");\n   const searchValueHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchValue(e.currentTarget.value);\n   };\n\n   const dispatch = useDispatch();\n   useEffect(() => {\n      if (categoryId !== -1) {\n         const getData: Promise<any> = dispatch(\n            getCategoryItems(currentPage, categoryId)\n         );\n         getData.then((item) => {\n            const data = item.value;\n\n            const totalCount = data.productCount;\n            let pageCount = data.maxPage;\n            const start = currentPage === 1 ? 0 : (currentPage - 1) * paging.pageSize;\n            const number = totalCount - (currentPage - 1) * paging.pageSize;\n            let startPage = Math.floor(currentPage / paging.pageBlock);\n            startPage = startPage * paging.pageBlock + 1;\n            if (currentPage % paging.pageBlock === 0) startPage -= paging.pageBlock;\n            let endPage = startPage + paging.pageBlock - 1;\n            if (endPage > pageCount) endPage = pageCount;\n            endPage = Math.floor(endPage);\n            setPaging((prev) => ({\n               ...prev,\n               endPage,\n               number,\n               pageCount,\n               start,\n               startPage,\n               totalCount,\n            }));\n\n            setItemList(data);\n            console.log(data);\n            const pageBlockArray: any[] = [];\n            for (let i = paging.startPage; i <= paging.endPage; i++) {\n               pageBlockArray.push(i);\n            }\n\n            if (data.products.length === 0) {\n               setPageBlocks([]);\n            } else {\n               setPageBlocks(pageBlockArray);\n            }\n         });\n      }\n   }, [\n      categoryId,\n      dispatch,\n      currentPage,\n      paging.pageSize,\n      paging.pageBlock,\n      paging.startPage,\n      paging.endPage,\n   ]);\n   const pageHandler = (\n      where: \"first\" | \"last\" | \"plus\" | \"minus\" | \"switchPage\",\n      pageNum?: number\n   ) => {\n      if (where === \"first\") {\n         setCurrentPage(1);\n      } else if (where === \"last\") {\n         if (paging.pageCount === 0) {\n            return;\n         }\n         setCurrentPage(paging.pageCount);\n      } else if (where === \"plus\") {\n         currentPage === paging.pageCount\n            ? setCurrentPage(currentPage)\n            : setCurrentPage(currentPage + 1);\n      } else if (where === \"minus\") {\n         currentPage > 1 ? setCurrentPage(currentPage - 1) : setCurrentPage(currentPage);\n      } else if (where === \"switchPage\") {\n         if (pageNum) setCurrentPage(pageNum);\n      }\n   };\n   return (\n      <div\n         css={css`\n            display: flex;\n            flex-direction: column;\n            flex: 0.9;\n            min-height: 85vh;\n         `}\n      >\n         {itemList.category.name} 목록\n         <div\n            css={css`\n               align-self: flex-end;\n            `}\n         >\n            <label\n               css={css`\n                  margin-right: 12px;\n               `}\n            >\n               검색\n               <input type=\"text\" value={searchValue} onChange={searchValueHandler} />\n            </label>\n         </div>\n         <div\n            css={css`\n               display: flex;\n               flex-direction: row;\n               flex-wrap: wrap;\n               flex: 1;\n               justify-content: center;\n               max-height: 100%;\n               padding-top: 15px;\n               margin-bottom: 20px;\n            `}\n         >\n            {itemList.products.map((item) => {\n               if (searchValue !== \"\") {\n                  if (item.name.includes(searchValue)) {\n                     return <ItemContent key={item.prefix} {...item} />;\n                  }\n               } else {\n                  return <ItemContent key={item.prefix} {...item} />;\n               }\n            })}\n         </div>\n         <div\n            css={css`\n               margin-bottom: 20px;\n            `}\n         >\n            <Paging\n               currentPage={currentPage}\n               pageBloks={pageBloks}\n               pageHandler={pageHandler}\n            />\n         </div>\n      </div>\n   );\n}\n\nexport default CategoryItemList;\n","import { Categorys } from \"../itemList/types/types\";\nimport { ApiInstance } from \"../utils/AxiosInstance\";\nimport { GET_CATEGORY_ITEMS } from \"./actionTypes\";\n\nexport function getCategorys(): any {\n   return {\n      type: GET_CATEGORY_ITEMS,\n      payload: async () => {\n         const data = await ApiInstance.get<Categorys[]>(`categories`);\n         return data.data;\n      },\n   };\n}\nexport function getCategoryItems(page: number, categoryID: number): any {\n   return {\n      type: GET_CATEGORY_ITEMS,\n      payload: async () => {\n         const data = await ApiInstance.get(\n            `products/${categoryID}/${page}?order=date-desc`\n         );\n         return data.data;\n      },\n   };\n}\nexport function getDetailItem(prefix: string): any {\n   return {\n      type: GET_CATEGORY_ITEMS,\n      payload: async () => {\n         const data = await ApiInstance.get(\n            `https://mock-api.ssomee.com/products/${prefix}`\n         );\n         return data.data;\n      },\n   };\n}\n","import { css } from \"@emotion/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { ProductType } from \"../types/types\";\nimport ItemContent from \"./ItemContent\";\nimport Paging from \"./Paging\";\n\nfunction BucketList() {\n   const [currentPage, setCurrentPage] = useState(1);\n   const [itemList, setItemList] = useState<ProductType[]>([]);\n   const [paging, setPaging] = useState({\n      totalCount: 0,\n      pageCount: 0,\n      start: 0,\n      number: 0,\n      startPage: 0,\n      endPage: 0,\n      pageBlock: 3,\n      pageSize: 10,\n   });\n   const [pageBloks, setPageBlocks] = useState<any[]>([]);\n   const [searchValue, setSearchValue] = useState(\"\");\n   const searchValueHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchValue(e.currentTarget.value);\n   };\n\n   useEffect(() => {\n      let TotalBucket: ProductType[] = JSON.parse(\n         localStorage.getItem(\"bucket\") as string\n      );\n      let data: ProductType[] = [];\n      if (!TotalBucket) {\n         TotalBucket = [];\n      } else {\n         data = [...TotalBucket].slice(\n            currentPage === 1 ? 0 : currentPage * 10 - 10,\n            currentPage * 10\n         );\n      }\n      const totalCount = TotalBucket.length;\n      let maxPage = Math.floor(totalCount / 10);\n      if (maxPage % 10 > 0) maxPage = maxPage + 1;\n      let pageCount = maxPage;\n      const start = currentPage === 1 ? 0 : (currentPage - 1) * paging.pageSize;\n      const number = totalCount - (currentPage - 1) * paging.pageSize;\n      let startPage = Math.floor(currentPage / paging.pageBlock);\n      startPage = startPage * paging.pageBlock + 1;\n      if (currentPage % paging.pageBlock === 0) startPage -= paging.pageBlock;\n      let endPage = startPage + paging.pageBlock - 1;\n      if (endPage > pageCount) endPage = pageCount;\n      endPage = Math.floor(endPage);\n      setPaging((prev) => ({\n         ...prev,\n         endPage,\n         number,\n         pageCount,\n         start,\n         startPage,\n         totalCount,\n      }));\n\n      setItemList(data);\n\n      const pageBlockArray: any[] = [];\n      for (let i = paging.startPage; i <= paging.endPage; i++) {\n         pageBlockArray.push(i);\n      }\n\n      if (data.length === 0) {\n         setPageBlocks([]);\n      } else {\n         setPageBlocks(pageBlockArray);\n      }\n   }, [\n      currentPage,\n      paging.pageSize,\n      paging.pageBlock,\n      paging.startPage,\n      paging.endPage,\n      localStorage.getItem(\"bucket\"),\n   ]);\n\n   const pageHandler = (\n      where: \"first\" | \"last\" | \"plus\" | \"minus\" | \"switchPage\",\n      pageNum?: number\n   ) => {\n      if (where === \"first\") {\n         setCurrentPage(1);\n      } else if (where === \"last\") {\n         if (paging.pageCount === 0) {\n            return;\n         }\n         setCurrentPage(paging.pageCount);\n      } else if (where === \"plus\") {\n         if (paging.pageCount === 0) {\n            return;\n         }\n         currentPage === paging.pageCount\n            ? setCurrentPage(currentPage)\n            : setCurrentPage(currentPage + 1);\n      } else if (where === \"minus\") {\n         currentPage > 1 ? setCurrentPage(currentPage - 1) : setCurrentPage(currentPage);\n      } else if (where === \"switchPage\") {\n         if (pageNum) setCurrentPage(pageNum);\n      }\n   };\n   return (\n      <div\n         css={css`\n            display: flex;\n            flex-direction: column;\n            flex: 0.9;\n            min-height: 100%;\n            border: 1px solid black;\n         `}\n      >\n         장바구니 목록\n         <div\n            css={css`\n               align-self: flex-end;\n            `}\n         >\n            <label\n               css={css`\n                  margin-right: 12px;\n               `}\n            >\n               검색\n               <input type=\"text\" value={searchValue} onChange={searchValueHandler} />\n            </label>\n         </div>\n         <div\n            css={css`\n               display: flex;\n               flex-direction: row;\n               flex-wrap: wrap;\n               flex: 1;\n               justify-content: center;\n               max-height: 100%;\n               padding-top: 15px;\n               margin-bottom: 20px; ;\n            `}\n         >\n            {itemList.map((item, index) => {\n               if (searchValue !== \"\") {\n                  if (item.name.includes(searchValue)) {\n                     return (\n                        <ItemContent\n                           setItemList={setItemList}\n                           isBucket\n                           index={index}\n                           key={uuid()}\n                           {...item}\n                        />\n                     );\n                  }\n               } else {\n                  return (\n                     <ItemContent\n                        setItemList={setItemList}\n                        isBucket\n                        index={index}\n                        key={uuid()}\n                        {...item}\n                     />\n                  );\n               }\n            })}\n         </div>\n         <div\n            css={css`\n               margin-bottom: 20px;\n            `}\n         >\n            <Paging\n               currentPage={currentPage}\n               pageBloks={pageBloks}\n               pageHandler={pageHandler}\n            />\n         </div>\n      </div>\n   );\n}\n\nexport default BucketList;\n","import React, { useEffect, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { Categorys, ItemListProps } from \"../types/types\";\nimport CategoryList from \"../itemListComponents/CategoryList\";\nimport CategoryItemList from \"../itemListComponents/CategoryItemList\";\nimport { useDispatch } from \"react-redux\";\nimport { getCategorys } from \"../../Redux/actions\";\nimport BucketList from \"../itemListComponents/BucketList\";\nimport { Outlet, useMatch } from \"react-router\";\n\nfunction ItemList({ whatList }: ItemListProps) {\n   const [apiList, setApiList] = useState<Categorys[]>([]);\n   const [selectedCategory, setSelectedCategory] = useState(-1);\n   const dispatch = useDispatch();\n   const isMatchChild = useMatch(\"/itemList/detail\");\n   useEffect(() => {\n      const getData: Promise<any> = dispatch(getCategorys());\n      getData.then((item) => setApiList(item.value));\n   }, [dispatch]);\n   useEffect(() => {\n      console.log(isMatchChild);\n   }, [isMatchChild]);\n   return (\n      <>\n         {isMatchChild ? (\n            <Outlet />\n         ) : (\n            <div\n               css={css`\n                  /* border: 3px solid black; */\n                  display: flex;\n                  flex-direction: column;\n                  width: 100%;\n                  min-height: 100vh;\n               `}\n            >\n               <div\n                  css={css`\n                     display: flex;\n                     flex-direction: row;\n                     justify-content: center;\n                     align-items: center;\n                     flex-wrap: wrap;\n                  `}\n               >\n                  {whatList === \"apiList\" &&\n                     apiList.map(({ id, name }) => (\n                        <CategoryList\n                           setSelectedCategory={setSelectedCategory}\n                           selectedCategory={selectedCategory}\n                           key={id}\n                           item={{ id, name }}\n                        />\n                     ))}\n               </div>\n               <div\n                  css={css`\n                     min-height: 100vh;\n                  `}\n               >\n                  {whatList === \"apiList\" && (\n                     <CategoryItemList categoryId={selectedCategory} />\n                  )}\n                  {whatList === \"bucketList\" && <BucketList />}\n               </div>\n            </div>\n         )}\n      </>\n   );\n}\n\nexport default ItemList;\n","import { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { useResolvedPath, useMatch, Link } from \"react-router-dom\";\nimport { C2C73D2, CFBEAFF } from \"../utils/Colors\";\nimport { CustomLinkProps } from \"./Types/type\";\n\nfunction CustomLinkComponent({ children, to }: CustomLinkProps) {\n   const resolve = useResolvedPath(to);\n   const isMatch = useMatch({ path: resolve.pathname, end: true });\n\n   return (\n      <Link\n         css={css`\n            all: unset;\n            cursor: pointer;\n            background-color: ${isMatch ? C2C73D2 : CFBEAFF};\n            height: 50px;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            font-size: 1.2rem;\n            font-weight: 500;\n         `}\n         to={to}\n      >\n         {children}\n      </Link>\n   );\n}\n\nexport default CustomLinkComponent;\n","import React from \"react\";\nimport { css } from \"@emotion/react\";\nimport CustomLinkComponent from \"./CustomLinkComponent\";\n\nfunction SideBar() {\n   return (\n      <nav\n         css={css`\n            display: flex;\n            flex-grow: 0.4;\n            flex-direction: column;\n            align-items: center;\n            justify-content: flex-start;\n            padding-top: 40px;\n            background-color: #fbeaff;\n            min-height: 100vh;\n         `}\n      >\n         <div\n            css={css`\n               display: flex;\n               flex-direction: column;\n               width: 100%;\n               justify-content: flex-start;\n            `}\n         >\n            <CustomLinkComponent to=\"/ItemList\">리스트</CustomLinkComponent>\n            <CustomLinkComponent to=\"/bucket\">장바구니</CustomLinkComponent>\n         </div>\n      </nav>\n   );\n}\n\nexport default SideBar;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHeaderArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 1200 120\",\n    preserveAspectRatio: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M649.97 0L550.03 0 599.91 54.12 649.97 0z\",\n    fill: \"#845ec2\",\n    className: \"shape-fill\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeaderArrow);\nexport default __webpack_public_path__ + \"static/media/headerArrow.1b4d3e7e.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { css } from \"@emotion/react\";\nimport { ReactComponent as Logo } from \"./images/headerArrow.svg\";\n\nconst Header = () => {\n   return (\n      <header className=\"custom-shape-divider-top-1636166233\">\n         <Logo />\n         <div\n            css={css`\n               position: absolute;\n               top: 0px;\n               right: 0px;\n               padding-right: 12px;\n               font-size: 1.4rem;\n               font-weight: bold;\n               color: #4b4453;\n            `}\n         >\n            소비의 미학\n         </div>\n      </header>\n   );\n};\n\nexport default Header;\n","import { css } from \"@emotion/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { useLocation } from \"react-router\";\nimport { getDetailItem } from \"../../Redux/actions\";\n\nfunction ItemDetail() {\n   const getLocation: { prefix: string } = useLocation().state as { prefix: string };\n   const [detail, setDetail] = useState(\"\");\n   const dispatch = useDispatch();\n   useEffect(() => {\n      const getData: Promise<any> = dispatch(getDetailItem(getLocation.prefix));\n      getData.then((item) => {\n         setDetail(\n            (item.value.description as string).replaceAll(\n               \"img\",\n               \"img style='width: 50%;' \"\n            )\n         );\n      });\n   }, [dispatch, getLocation.prefix]);\n\n   return (\n      <div\n         css={css`\n            border: 1px solid black;\n            max-width: 100%;\n            display: flex;\n            flex-direction: column;\n         `}\n      >\n         <div\n            css={css`\n               width: 80%;\n            `}\n         >\n            {ReactHtmlParser(detail)}\n         </div>\n      </div>\n   );\n}\n\nexport default ItemDetail;\n","import * as React from \"react\";\nimport { css } from \"@emotion/react\";\n\nimport {\n   Routes,\n   Route,\n   //    Outlet,\n   //    useNavigate,\n   //    NavigateFunction,\n   //    useLocation,\n   //    useParams,\n   //    useMatch,\n   BrowserRouter,\n} from \"react-router-dom\";\nimport \"./Css.css\";\nimport ItemList from \"./itemList/itemListScreens/ItemList\";\nimport SideBar from \"./Main/SideBar\";\nimport Header from \"./Main/Header\";\nimport ItemDetail from \"./itemList/itemListComponents/ItemDetail\";\n\nconst App = () => {\n   return (\n      <BrowserRouter>\n         <div\n            css={css`\n               flex-direction: column;\n               display: flex;\n               min-height: 100%;\n            `}\n         >\n            <Header />\n            <div\n               css={css`\n                  display: flex;\n                  flex-direction: row;\n               `}\n            >\n               <SideBar />\n               <main\n                  css={css`\n                     display: flex;\n                     flex: 8;\n                  `}\n               >\n                  <Routes>\n                     <Route path=\"/\">\n                        <Route path=\"itemList\" element={<ItemList whatList=\"apiList\" />}>\n                           <Route path=\"detail\" element={<ItemDetail />} />\n                        </Route>\n                        <Route\n                           path=\"bucket\"\n                           element={<ItemList whatList=\"bucketList\" />}\n                        />\n                     </Route>\n                  </Routes>\n               </main>\n            </div>\n         </div>\n      </BrowserRouter>\n   );\n};\nexport default App;\n// const ChildHome = (props: any) => {\n//    const location = useLocation();\n//    // 파라미터를 가져온다\n\n//    const getParam = useParams();\n//    // :id를 가져온다.\n\n//    const isMatch = useMatch({ path: \"Home/ChildHome/child\", end: true });\n//    // 현재 주소와 매치가되면 값을 반환\n\n//    console.log(location, getParam, isMatch);\n\n//    return (\n//       <div\n//          css={css`\n//             border: 1px solid black;\n//          `}\n//       >\n//          asds\n//       </div>\n//    );\n// };\n// function Home(props: any) {\n//    const navigater: NavigateFunction = useNavigate();\n\n//    React.useEffect(() => {\n//       navigater(\"/Home\");\n//    }, []);\n//    return (\n//       <div>\n//          <h2>Home</h2>\n//          <Outlet />\n//          {/* 자식 라우트의 값을 */}\n\n//          <button onClick={() => navigater(\"ChildHome/child\", { state: { param: \"파라미터\" } })}>\n//             title=\"asdadsasdasasd\"\n//          </button>\n//       </div>\n//    );\n// }\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionType } from \"./Types/types\";\nimport {\n   GET_CATEGORYS_FULFILLED,\n   GET_CATEGORY_ITEMS_FULFILLED,\n   GET_DETAIL_ITEM,\n} from \"./actionTypes\";\n\nconst defaultState = {\n   result: \"\",\n};\nconst defaultReducer = (state = defaultState, action: ActionType) => {\n   switch (action.type) {\n      case GET_CATEGORY_ITEMS_FULFILLED:\n         return { ...state, result: action.payLoad };\n      case GET_CATEGORYS_FULFILLED:\n         return { ...state, result: action.payLoad };\n      case GET_DETAIL_ITEM:\n         return { ...state, result: action.payLoad };\n      default:\n         return state;\n   }\n};\nexport default defaultReducer;\n","import { combineReducers } from \"redux\";\nimport defaultReducer from \"./defaultReducer\";\n\nconst reducers = combineReducers({\n   defaultReducer,\n});\n\nexport default reducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport PromiseMiddleware from \"redux-promise-middleware\";\nimport ReduxThunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport reducers from \"./Redux/combineReducers\";\n// import logger from \"redux-logger\";\n\n// 미들웨어들을 store에 넣어주자\nconst store = createStore(reducers, applyMiddleware(PromiseMiddleware, ReduxThunk));\nReactDOM.render(\n   <React.StrictMode>\n      <Provider store={store}>\n         <App />\n      </Provider>\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}